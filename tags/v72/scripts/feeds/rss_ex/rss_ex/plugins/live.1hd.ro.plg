#!/bin/sh
#
#   http://code.google.com/media-translate/
#   Copyright (C) 2010  Serge A. Timchenko
#
#   This program is free software: you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation, either version 3 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program. If not, see <http://www.gnu.org/licenses/>.
#

# Translate CGI module
# 'live.1hd.ro' plug-in
#
# version: 1.1 13.01.2011 12:27:20
#
# http://live.1hd.ro/playlist.php
#

if echo "${arg_url}" | grep -q -s 'live\.*\(1hd\|prahovahd\)\.ro/playlist.*\.php$'; then 

  local PLAYLISTFILE=$CACHEPATH/temp.xspf
  rm -f $PLAYLISTFILE

  local PHPSESSID=`$MSDL --debug -o /dev/null -p http --useragent "${USERAGENT}" "http://live.1hd.ro/" 2>&1 | awk '/Set-Cookie/ {match($0, /PHPSESSID=([^; ]+)[; ]/, arr); print arr[1]}'`
  $WGET -q --header "User-Agent: ${USERAGENT}" --header "Cookie: PHPSESSID=${PHPSESSID}" -O $PLAYLISTFILE "${arg_url}" 2>/dev/null

  if [ -f $PLAYLISTFILE ]; then
    awk '
        BEGIN {
          counter=2000;
          skip=0;
        }
        { 
          if(skip == 0) { 
            gsub(/&/, "&amp;"); print $0; 
          } 
        }
        /<playlist/ {
          if(skip == 0) {
            print "<title>OneHD</title>"
          }
        }
        /<location>/ {
          if(skip == 0) {
            print "<meta rel=\"translate\">Rtmp-options:-v</meta>"
          }
        }
        /<\/track>/ {
          counter--;
          if(counter <= 0)
          {
            skip = 1;
          }
        }
        /(<\/trackList>|<\/playlist>)/ {
          if(skip != 0) print $0; 
        }
    ' $PLAYLISTFILE > $PLAYLISTFILE.tmp
    mv -f $PLAYLISTFILE.tmp $PLAYLISTFILE

    stream_type='application/xspf+xml'
    stream_url=$PLAYLISTFILE
    protocol='file'
  fi
  return $RC_OK
fi

return $RC_FAIL
