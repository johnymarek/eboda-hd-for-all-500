<!--
#   http://code.google.com/media-translate/
#   Copyright (C) 2010  Serge A. Timchenko
#
#   This program is free software: you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation, either version 3 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program. If not, see <http://www.gnu.org/licenses/>.
-->

<script language="javascript">

var playerName = localStorage["player_name"];
if(!playerName)
{
  playerName = "player";
  localStorage["player_name"] = playerName;
}  

var sendToPlayer = function() {
  
  var makeRequest = function(url) {
    var http_request = false;
    if (window.XMLHttpRequest) { // Mozilla, Safari, ...
      http_request = new XMLHttpRequest();
      if (http_request.overrideMimeType) {
              http_request.overrideMimeType('text/xml');
      }
    } else if (window.ActiveXObject) { // IE
      try {
        http_request = new ActiveXObject("Msxml2.XMLHTTP");
      } catch (e) {
        try {
          http_request = new ActiveXObject("Microsoft.XMLHTTP");
        } catch (e) {}
      }
    }
    if (!http_request) {
      alert('errorXMLHTTP');
      return null;
    }
    http_request.open('get', url, false);
    http_request.setRequestHeader("If-Modified-Since", "Thu, 1 Jan 1970 00:00:00 GMT");
    http_request.setRequestHeader("Cache-Control", "no-cache");    
    http_request.send();
    return http_request.status;
  }
  
  return {
    run : function(streamUrl, tab) {
      var playerName = localStorage["player_name"];
      try {
        var url = "http://"+playerName+"/cgi-bin/translate?renderer,," + encodeURIComponent(streamUrl);
        var res = makeRequest(url);
        var msgTitle;
        var msg = chrome.i18n.getMessage("linkMsg")+" '"+streamUrl+"' "+chrome.i18n.getMessage("sendToMsg")+" '"+playerName+"'";
        if(res == 200)
        {
          msgTitle = chrome.i18n.getMessage("messageTitleSuccess");
        }
        else
        {
          msgTitle = chrome.i18n.getMessage("messageTitleFailed")+"("+res+")";
        }
        var notification = webkitNotifications.createNotification(
          'mediarenderer.ico',  // icon url - can be relative
          msgTitle,  // notification title
          msg  // notification body text
        );
        notification.show();
        setTimeout(function(){notification.cancel();}, 3000);
      }
      catch(exception) { alert("ERROR: "+exception.description); }
    }
  };
}();

function onClick(info, tab) {
  var streamUrl = info.selectionText;
  if(!streamUrl)
  {
    streamUrl = info.linkUrl ? info.linkUrl : info.pageUrl;
  }
  sendToPlayer.run(streamUrl, tab);
}

var title = chrome.i18n.getMessage("playOnPlayer");
var id = chrome.contextMenus.create({"title": title, "contexts":["page","selection","link"],
                                     "onclick": onClick});
                                     
chrome.browserAction.onClicked.addListener(function(tab) {sendToPlayer.run(tab.url, tab)});                                     

</script>